@page
@model ProfileModel
@{
    ViewData["Title"] = "Профіль";
}

<div class="max-w-4xl mx-auto px-4">
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
        <div class="lg:col-span-1">
            <h1 class="text-2xl font-bold mb-6 text-gray-800">Профіль користувача</h1>
            
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="bg-green-100 border border-green-300 text-green-700 p-4 rounded-lg mb-6">
                    <div class="flex items-center">
                        <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                        </svg>
                        @TempData["SuccessMessage"]
                    </div>
                </div>
            }
        </div>

        <div class="lg:col-span-2">
            <div class="bg-white border border-gray-200 p-6 rounded-lg shadow-sm">
        <form method="post">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="All" class="text-red-600 mb-4 bg-red-50 p-3 rounded border border-red-200"></div>
            
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
                    <div class="md:col-span-2">
                        <label asp-for="Input.Name" class="block mb-2 font-medium text-gray-700">Ім'я</label>
                        <input asp-for="Input.Name" class="w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 @(Html.ViewData.ModelState["Input.Name"]?.Errors.Count > 0 ? "border-red-500" : "")" />
                        <span asp-validation-for="Input.Name" class="text-red-600 text-sm"></span>
                    </div>
                    
                    <div class="md:col-span-2">
                        <label asp-for="Input.Email" class="block mb-2 font-medium text-gray-700">Email</label>
                        <input asp-for="Input.Email" type="email" class="w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 @(Html.ViewData.ModelState["Input.Email"]?.Errors.Count > 0 ? "border-red-500" : "")" />
                        <span asp-validation-for="Input.Email" class="text-red-600 text-sm"></span>
                    </div>
                    
                    <div class="md:col-span-2">
                        <label asp-for="Input.Description" class="block mb-2 font-medium text-gray-700">Опис</label>
                        <textarea asp-for="Input.Description" rows="4" class="w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 @(Html.ViewData.ModelState["Input.Description"]?.Errors.Count > 0 ? "border-red-500" : "")"></textarea>
                        <span asp-validation-for="Input.Description" class="text-red-600 text-sm"></span>
                    </div>
                </div>
            
                <div class="flex justify-center mt-6">
                    <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-8 rounded-lg shadow-md hover:shadow-lg transition duration-300 transform hover:scale-105">
                        Зберегти
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Автоматически скрывать сообщения через 5 секунд
        document.addEventListener('DOMContentLoaded', function() {
            const successMessage = document.querySelector('.bg-green-100');
            const errorMessage = document.querySelector('.bg-red-100');
            
            if (successMessage) {
                setTimeout(function() {
                    successMessage.style.transition = 'opacity 0.5s ease-out';
                    successMessage.style.opacity = '0';
                    setTimeout(function() {
                        successMessage.remove();
                    }, 500);
                }, 5000);
            }
            
            if (errorMessage) {
                setTimeout(function() {
                    errorMessage.style.transition = 'opacity 0.5s ease-out';
                    errorMessage.style.opacity = '0';
                    setTimeout(function() {
                        errorMessage.remove();
                    }, 500);
                }, 7000); // Ошибки показываем дольше
            }
        });
    </script>
}
